{"version":3,"sources":["ListForm.js","ListItem.js","delete-btn.js","Navbar.js","ToggleTab.js","List.js","App.js","index.js"],"names":["ListForm","className","type","placeholder","onClick","e","document","querySelector","console","log","itemname","value","duedate","props","additem","React","Component","ListItem","toggleitem","item","checkitem","uncheckitem","state","checked","classname","setState","this","checkshow","id","DeleteBtn","deleteItems","src","NavBar","count","ToggleTab","showtodo","toggletab","List","checked_ids","push","indx","indexOf","splice","find_and_delete","items","cur_id","tab","todotab","loading","deleted","length","itemstoshow","map","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1b541621.chunk.js","sourcesContent":["import React from \"react\";\n\n\n\nclass ListForm extends React.Component{\n    constructor()\n    {\n        super();\n    }\n    render()\n    {\n        return(\n            <div>\n                <div className=\"Listform\">\n                    <input type=\"text\" className=\"item-box\" placeholder=\"Enter to do item\" ></input>\n                    <input className=\"date-input\" type=\"date\"></input>\n                    <button type=\"submit\" className=\"add-btn\" onClick={()=> {\n                        let e=document.querySelector('.item-box');\n                        console.log(e);\n                        let itemname=e.value;\n                        let duedate=document.querySelector(\".date-input\").value;\n                        this.props.additem(itemname,duedate);\n                    }}>Add</button>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport default ListForm;","import React from \"react\";\n\nclass ListItem extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      checked: 0,\n      classname: \"item-name\",\n    };\n  }\n\n  toggleitem = (item, checkitem, uncheckitem) => {\n    console.log(\"Button clicked\");\n    let { checked, classname } = this.state;\n    checked = 1 - checked;\n    if (checked == 1) {\n      classname = \"item-name checked\";\n      checkitem(item);\n    } else {\n      classname = \"item-name\";\n      uncheckitem(item);\n    }\n    console.log(classname);\n    this.setState({\n      checked: checked,\n      classname: classname,\n    });\n    return;\n  };\n  render() {\n    let { itemname, duedate, id } = this.props.item;\n    let checkshow = this.props.checkshow;\n    return (\n      <div className=\"ListItem\">\n        {checkshow && (\n          <input\n            type=\"checkbox\"\n            className=\"checkbox\"\n            onClick={() =>\n              this.toggleitem(\n                this.props.item,\n                this.props.checkitem,\n                this.props.uncheckitem\n              )\n            }\n          ></input>\n        )}\n        <div className={this.state.classname}>{itemname}</div>\n        <div className=\"duedate\">{duedate}</div>\n      </div>\n    );\n  }\n}\n\nexport default ListItem;\n","import React from \"react\";\n\n\nconst DeleteBtn=(props)=>\n{\n    return(\n        <div className=\"delete-btn\" onClick={()=>props.deleteItems()}>\n            <img className=\"delete-img\" src=\"https://cdn-icons-png.flaticon.com/512/1214/1214594.png\"></img>\n            <div className=\"deletename\">Delete</div>\n        </div>\n    );\n};\n\nexport default DeleteBtn;","import React from \"react\";\n\nconst NavBar = (props) => {\n  return (\n    <div className=\"NavBar\">\n      <div className=\"site-name\">ToDoList</div>\n      <img\n        className=\"logo\"\n        src=\"https://cdn-icons-png.flaticon.com/512/2666/2666436.png\"\n      ></img>\n      <img\n        className=\"countimg\"\n        src=\"https://cdn-icons-png.flaticon.com/512/2933/2933245.png\"\n      ></img>\n      <div className=\"count-items\">{props.count}</div>\n    </div>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\n\nclass ToggleTab extends Component {\n  render() {\n    return (\n      <div className=\"Toggle-bar\">\n        <div\n          className={this.props.showtodo ? \"toggle currenttab\" : \"toggle\"}\n          onClick={() => this.props.toggletab()}\n        >\n          To-Do\n        </div>\n        <div\n          className={this.props.showtodo ? \"toggle\" : \"toggle currenttab\"}\n          onClick={() => this.props.toggletab()}\n        >\n          Completed\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ToggleTab;\n","import React from \"react\";\nimport ListForm from \"./ListForm\";\nimport ListItem from \"./ListItem\";\nimport DeleteBtn from \"./delete-btn\";\nimport NavBar from \"./Navbar\";\nimport * as firebase from \"firebase\";\nimport ToggleTab from \"./ToggleTab\";\n\nclass List extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      items: [],\n      checked_ids: [],\n      loading: false,\n      deleted: [],\n      todotab: true,\n      cur_id:0,\n    };\n  }\n//   componentDidMount() {\n//     // firebase.\n//     //     firestore()\n//     //     .collection('items')\n//     //     .get()\n//     //     .then((snapshot)=>{\n//     //         console.log(snapshot);\n//     //         let items=[];\n//     //         snapshot.docs.map((doc)=>\n//     //         {\n//     //             let item=doc.data();\n//     //             item['id']=doc.id;\n//     //             items.push(item);\n//     //         })\n//     //         this.setState({\n//     //             items:items,\n//     //             loading:false,\n//     //         });\n//     //     });\n//     firebase\n//       .firestore()\n//       .collection(\"items\")\n//       .onSnapshot((snapshot) => {\n//         console.log(snapshot);\n//         let items = [];\n//         snapshot.docs.map((doc) => {\n//           let item = doc.data();\n//           item[\"id\"] = doc.id;\n//           items.push(item);\n//         });\n//         this.setState({\n//           items: items,\n//           loading: false,\n//         });\n//       });\n//   }\n  checkitem = (item) => {\n    let checked_ids = this.state.checked_ids;\n    checked_ids.push(item.id);\n    console.log(checked_ids);\n    this.setState({\n      checked_ids: checked_ids,\n    });\n  };\n  uncheckitem = (item) => {\n    let checked_ids = this.state.checked_ids;\n    let indx = checked_ids.indexOf(item.id);\n    checked_ids.splice(indx, 1);\n    console.log(checked_ids);\n    this.setState({\n      checked_ids: checked_ids,\n    });\n  };\n  find_and_delete(id) {\n    let items = this.state.items;\n    let indx = 0;\n    for (indx = 0; indx < items.length; indx++) {\n      if (items[indx].id === id) {\n        break;\n      }\n    }\n    if (indx != items.length) {\n      let deleted = this.state.deleted;\n      deleted.push(items[indx]);\n      this.setState({\n        deleted: deleted,\n      });\n      items.splice(indx,1);\n      this.setState({\n          items:items,\n      });\n//       firebase\n//         .firestore()\n//         .collection(\"items\")\n//         .doc(items[indx].id)\n//         .delete()\n//         .then(() => console.log(\"deleted successfully\"))\n//         .catch((error) => console.log(\"error in deleting\", error));\n      return indx;\n    }\n    return -1;\n  }\n  deleteItems = () => {\n    let checked_ids = this.state.checked_ids;\n    console.log(\"to be deleted\", checked_ids);\n    for (let id of checked_ids) {\n      this.find_and_delete(id);\n    }\n    checked_ids = [];\n    this.setState({\n      checked_ids: checked_ids,\n    });\n  };\n  additem = (itemname, duedate) => {\n    let items=this.state.items;\n    let cur_id=this.state.cur_id;\n//     firebase\n//       .firestore()\n//       .collection(\"items\")\n//       .add({\n//         itemname: itemname,\n//         duedate: duedate,\n//       })\n//       .then((docRef) => {\n//         console.log(\"ITEM ADDED\", docRef);\n//       })\n//       .catch((error) => {\n//         console.log(\"error occurred\", error);\n//       });\n    items.push({\n        itemname:itemname,\n        duedate:duedate,\n        id:cur_id,\n    });\n    cur_id+=1;\n    this.setState({\n        items:items,\n        cur_id:cur_id,\n    });\n  };\n  toggletab = () => {\n    let tab = this.state.todotab;\n    tab = !tab;\n    this.setState({\n      todotab: tab,\n    });\n  };\n  render() {\n    const items = this.state.items;\n    console.log(this.state.deleted);\n    let showtodo = this.state.todotab;\n    let itemstoshow = showtodo ? items : this.state.deleted;\n    return (\n      <div className=\"list-container\">\n        <ToggleTab toggletab={this.toggletab} showtodo={showtodo} />\n        <NavBar count={itemstoshow.length} />\n        {showtodo && <ListForm additem={this.additem} />}\n        {itemstoshow.length == 0 && <h1>Nothing To Show</h1>}\n        {itemstoshow.map((item) => {\n          return (\n            <ListItem\n              key={item.id}\n              item={item}\n              checkshow={showtodo}\n              checkitem={this.checkitem}\n              uncheckitem={this.uncheckitem}\n            />\n          );\n        })}\n        {this.state.loading && <h1 className=\"loading\">Loading List</h1>}\n        {showtodo && <DeleteBtn deleteItems={this.deleteItems} />}\n      </div>\n    );\n  }\n}\n\nexport default List;\n","import List from \"./List\";\nimport ToggleTab from \"./ToggleTab\";\n\nfunction App() {\n  return (\n    <div>\n      <List />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as firebase from 'firebase/app'\nimport 'firebase/firestore';\n\n// Import the functions you need from the SDKs you need\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// // Your web app's Firebase configuration\n// const firebaseConfig = {\n//   //here goes the keys of firebase api\n// };\n\n// // Initialize Firebase\n// const app = firebase.initializeApp(firebaseConfig);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}